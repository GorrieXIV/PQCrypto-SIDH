// Paramters defining the prime p = f*lA^eA*lB^eB - 1
f := 1;
lA := 2;
lB := 3;
eA := 372;
eB := 239;

// Define the prime p
p := f*lA^eA*lB^eB-1;
assert IsPrime(p: Proof:=false);

// or, explicitly...
print p eq
1035471774176930525297776823786680532142738964554907117011618967905467894068247\
8846502882896561066713624553211618840202385203911976522554393044160468771151816\
976706840078913334358399730952774926980235086850991501872665651576831;

// Prime field of order p
Fp := GF(p);
// Finite field of characteristic Border
// The quadratic extension via x^2 + 1 since p = 3 mod 4
Fp2<i> := ExtensionField<Fp,x|x^2+1>;

// E0 is the starting curve E0/Fp2: y^2=x^3+x (the A=0 Montgomery curve)
E0 := EllipticCurve([Fp2|1,0]);

A := Fp![0x00000CCC0375DFBB679CA085D5DB1B251929AF61630D6F4EF3A38D1DE885CDE67676E34E43FC0E09FFB53EB68FD65F52C69E9233AB15E28088A396C4817C911482899547F9F40D884FEE10A7A06B29C1BE00CA61A5776EE7B34A77B31F07F8C8] + Fp![0x00006358796E6250FC260AC2CA208FEC2B99F9175046261BE76F6C46550A17FFB46D556FD39FEF47E942EEA64860868FD482342B42394B4E2C758CDEAF560AE9EE6F9D0EFFA9837AF17F0F70910D6AF1FB3AD971B70589740DE4A204C335EC07]*i;

_<x> := PolynomialRing(Fp2);

//Randalls public key curve EA
EA := EllipticCurve(x^3 + A*x^2 + x);

print IsSupersingular(E0) and (p+1)*Random(EA) eq EA!0;

// Create points R1 and R2 and integer a = ainv*b OR binv*a

R1x := Fp![0x000035CB02E5B7A22CC55982684BCD71018F02CAC2F8BDC63DD46050FB52C2287A44E10A1EADBB747046F42E51D9C97EFF4D7DEB43222FE21AD032BDBFCD8440934449E35964450A30D47C58EA4D5CF59BBAEE2CD219BFBE8974B80BEF4E43B7] + Fp![0x000044C70BE67B6F7DBF3345D677DC31FDBD670DA36685E21E11C72427BC0AC950D58837F822B0421C0E080D97A7FFD5B1A7E9D910A4AAAF7410E48E2B4F575637EA80C16BEC5BF75CA9250D97B0ADE0E13085B0AEFEC5CCCC0E11A97CCD81E6]*i;
R1y := Fp![0x0000622DCCE34E4BA53C296EB755428B2A680B603A634AA951151C22C7AD3E74D4DF7F3A620AE9B9ADF9E36AC6A0AF93DF56A1843A23597C7B5C8D3C64EEAA8AA7538434376674808CBC9626A9BF2EEB29DAAD99FDC3F4D485E70A66205FC31B] + Fp![0x0000169CD9E3F70F0B0D7D59E1A17A4666E8B699A305E6ACAA41D9D497B809C07EBB469F8DFF41DFDBAA3434D9711C538DE180126F1324BEE0BDD2FC969F7E03C3A93EA4278536D1E972EADFD8E72FDA49204329B7AE1FB1A6F310168AF256B1]*i;
R1 := EA(Fp2)![R1x, R1y];

R2x := Fp![0x000010A14E611AEB59803631AB6D6BF051574843A9919B427BA5918B2FAF893D54BE6BAC1CC3F3A84E7E4B258FFAD6EB8DB80685D42313ADC7DC56BDEAEF449BD3DF30BB6FCB2551FE762176245235E84E97B179E99F45B24E0C1BFFD1136BDB] + Fp![0x00000F2579C527762E9AB2791963FC5136A47D4DD7222E1548355EAE3C97C8E9CDB65CEAF64384F5A6B89F4F0ADEEB4EEE3A11D343843D17D3312AE8BDDAC055F18D8B485791D938F8051F5E2D7936EEECD60FB93770E09E7FC0EFF9354BF4C8]*i;
R2y := Fp![0x0000507363CC32514B3BD708B6E6551A9DBBEAE7058C133B6B33DE3D60F3C56E899E64BA84A8305D498EEB769094B6B6559BF2D6EF319E56F8A883F3572541C87DB306A0BABFAA291291316F12FEA8AE7393960755F306EECC41DFCB67FED0CB] + Fp![0x00005E1FB0B906126418B27CE0F33023E9E35A1B95BD097828F18D11504C8D886579ABB4B0E5ED0A646261B88133DE85AE6B6375490EB3E64876AB7E14EB5F509CBC26655817F6A6873C4211F493B3FA0FDBE06D4723A278953DD967774E1D4D]*i;
R2 := EA(Fp2)![R2x, R2y];

newPsiSx := Fp![0x00003D2D9E3D14DA1B6F1B2BFDECD765556D5F7E1E2C2CF5317467C8B0844DB9C9F5FEA32F3F9C10698876AEE265762D719DB60C817E4216A1F0EEE73F9BC89F902B79E26C81FA176D8A1EF41F63F26DBD408D8D6267ABF483EB1FD2C36A148E] + Fp![0x000003AA79E06747F863A35D1A2FBB7F243F6C64857BDA34BDC9F66D7DE3B912AD29959022DE309193C68A82ED4A2113A9358BF8B138A32FF50B2FA8B432419BF690A26FFAD130A20A2A145E970845BECA8F8F27BF2040198BCFCBBCF447ECBB]*i;
newPsiSy := Fp![0x000056B7402B155F0FE8312CCD76E90FA8DF720EC287EEEACF2557B8A48B7DEC8488F1206B46F2B4DC79866001F942D7E45E1FD2B3A85AF71D1E0D97CDB5EB6A8666BDB01CE6F762F83CEC7ED07142FF65B8D4009B0F76C20DF918DA620F9C57] + Fp![0x000069B878456ABA61A08D75D52ACBA06088F31C72D934B6F650CCB9BB0A407E21F873CD98B4948E8AC6FBCAC1C0633658885FF36AF24B94DCDE23D2F4A8FA69DA4A2FE59A6513AD900A990D5A477BC028421A9132888D6DB6E5AD29C9BAAA28]*i;
newPsiSz := Fp![0x00003190BA7562EFB98D09185D7CB454C5653C7F3AED7735BD9AA92F758A365C5D0C6CF9B1D9E937D94C54026EC338AF870A6B0E4B872ED2FE9284C83234ECF68868C7CA37FDC3A6B5BD38DB8977C7AA1DA8C3A20E9C0C78BF2FB7B5304833E4] + Fp![0x00000CB90D56FB556EF02BEDB1A449E41B1420A632662D6FA6B6B85EB35A1D47AE42D8774C86F41E5F0358046DFCF38B7CC8939B4209C8441B40CED1F83C2F28BCDF599A3B2952BB2E47E5350DDC3C9E1B8689727FE598E137D0D9014D951B1B]*i;
newPsiS := EA(Fp2)![newPsiSx, newPsiSy, newPsiSz];

a := 0x000005FF54AA19CDC5B69FB4AB3650EF8133C5D1ACF619CE4BC666EC5A22C31E94E3B812D77AE66E8B46F3A4C2E284D5;

bit := 0;

if bit eq 1 then
  magPsiS := a*R1 + R2;
else
  magPsiS := R1 + a*R2;
end if;

print R1 in EA;
print R2 in EA;
print magPsiS in EA;
print newPsiS in EA;

psiSTriple := newPsiS;
for i in [1..eB-1] do
  psiSTriple := 3*psiSTriple;
  if psiSTriple eq EA!0 then
    print "Error in magma psi(S) order";
  end if;
end for;
