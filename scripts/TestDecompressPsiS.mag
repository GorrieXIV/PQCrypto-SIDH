// Paramters defining the prime p = f*lA^eA*lB^eB - 1
f := 1;
lA := 2;
lB := 3;
eA := 372;
eB := 239;

// Define the prime p
p := f*lA^eA*lB^eB-1;
assert IsPrime(p: Proof:=false);

// or, explicitly...
print p eq
1035471774176930525297776823786680532142738964554907117011618967905467894068247\
8846502882896561066713624553211618840202385203911976522554393044160468771151816\
976706840078913334358399730952774926980235086850991501872665651576831;

// Prime field of order p
Fp := GF(p);
// Finite field of characteristic Border
// The quadratic extension via x^2 + 1 since p = 3 mod 4
Fp2<i> := ExtensionField<Fp,x|x^2+1>;

// E0 is the starting curve E0/Fp2: y^2=x^3+x (the A=0 Montgomery curve)
E0 := EllipticCurve([Fp2|1,0]);

A := Fp![0x0000504AF1DD46B1EC726848A44BDFCAF4216B91EA90269442E4F201D7B036839BC70678088531EAB67503344629D628F494E2FBF76D531696E819DC544339CC52ABD993E316DEF8C88628E6C42B74B34CFF00ED66E7AAAF4537DE7B5FFF9AF8] + Fp![0x000045ECB42ED3AD240C65DA678AFBC1C0E7576ACBF54D9F8EAFCEAFEA998EDED5C2F0FD4761C3006655146E7B5CC505EE939E87A9492B825349B5396775A987CE64BB44B8D7ED4F8F6FA06BFFA36EFBE329F0745081A6256FA77B9A71CB7A45]*i;

_<x> := PolynomialRing(Fp2);

//Randalls public key curve EA
EA := EllipticCurve(x^3 + A*x^2 + x);

print IsSupersingular(E0) and (p+1)*Random(EA) eq EA!0;

// Create points R1 and R2 and integer comp = ainv*b OR binv*a

R1x := Fp![0x00001304E8FF5B9568A130C93AC624B8DBF9624261CA29D12AC0A2BFDFFBCEE84161D0ABCC130488D233D9B6865B6BEAAA79586A2CE5FA047B2B511F84CFE7B06C4DED4EDAFF96781D4B1327BB520E33C117F0CB179C0D58C70991F39EB4C7EF] + Fp![0x00003E10E7DE258B5656BD7FCB34D1DA89E8DDB9ADFA3298BCC03DAB5BE351D7121D128A1C155F81F1C1022ECB7E1EB82D96CAA628C7321748305D8E308CE89E2C5765315AAA7223586BB55B6CF13BFA7A70A2B0092547D47D58D424617C7B5E]*i;
R1y := Fp![0x000009E1F3BD78E332118B07FB7801299B17A94EF88968D203FBF50DAB87A656B9808C26CA53710185F3C13D455CEEFA1478CCFC95A18FA2CA7909B6CD7E94358FBBDA231AEEC0DC8D870DF6A48F1E4A91C3F2A6E94A0D607ECE7348BF2884E5] + Fp![0x000059CD6C93DD8E9E045DF53DB50A9D21882B175D2A6841CE7C83BEAB297B500F87715E63A59E31DC36A76B18DABE9C2CD915B4FE421EDCDD09CD71CFD6AF135AF3459E46D9189FB23916D70CEFA21E105925A1420852A0F5EB3041A6A492C2]*i;
R1 := EA(Fp2)![R1x, R1y];

R2x := Fp![0x00005712F83D5E4D1BCE9050AECADBA2D4060E116C1A3A70B016C5709E436FAD585ADFEB46EC52DEC002C08821CCF66292889D20E1D7286EE373F4E095F2A0372E4A53656E4856978D20FE9DAC27F2A3F79BE1E38D5BFF4827ABD11BDF3485ED] + Fp![0x000043C8A14F78D60641756FD4F360313764B28EA202235C23F662DC2A08826035B134CF33C337F23626E71F0773F6930C5F7245F2D9C80FB01888AEFD727C736F4F1E5218786D05A8949902833DBFA4DEB3548FA5F20F3692FC97D269735802]*i;
R2y := Fp![0x000000FCEAC7E009449476C1292B4A4A38FE3E25F7F2D0C997B307C534F77DA33EF8B369CB33E1D2E9ADCCE8D7715154029C092A0B3C6AC6E0AC45A9434B4A8D4ADF7D47CE09BB577AE2DB0441F75BC212ABA5C841184AE7F5B264514C7DEAE0] + Fp![0x0000111E600A85D706701AF1A643AEF51085AAB2172362B192F2C4BC3E6080F91B0BC8FBF66B258C0A2BF536742425F7DCE47166744242B259ECFF2B725D22661DEBD81F33B0FDCA73D3810C5D526EA92DA808E320FEAC534ABF839586103F4A]*i;
R2 := EA(Fp2)![R2x, R2y];

newPsiSx := Fp![0x00003AF1AAE8E2A997170B33ECF3F97B3A5B66F4D03FA6E3357D09D8D5BC33A4A4FEC3E322F2B984FE1D2DD52D83CEE1904F372AEE16F959F9008D4677D4CF0C323AC447E43B872CC484DFD44E61F82EBDCC4711ABB4FEE6DDA80367EB5665E0] + Fp![0x000007886AC04F307F50F400BEA9DEC5024E26C792C6FAA227F311DFBE78391612F1EE390AE87BCF6B0C2D0CDCBF1D05FEDA6E5F78D4D4209B3DBFD2787B94A5284512884D3E94765933E537618E230FE3017430A6A5F46E7094D1E22B4151DF]*i;
newPsiSy := Fp![0x0000650031EFB2F907CD60C08BF0BEE5D82F64571FDA2FBE15AF7037779244D1FCA0B5769F8432B22FF8F26290A5EFCCC6B906B749E206FF9E4B095FA77837D04ADB1E5D362E829230619141103FF9F4080A395741D59A249C9FC86440E7AAEB] + Fp![0x0000213522DD3603BD0309894B38884E36DDE148ED8D0A6A32BBDA689612885961E547863E3F9FE54ADDAB936BBE25524B174235E8CEF8386A18A6361B154DE6DA52CCBE78A2A313A7CFA8364BBD17F7E321E02F64A726AF17A6882AE7C6C826]*i;
newPsiSz := Fp![0x00003028C45B80C51931ED5817A318E4448A6CFDE2EE805FDEE265F140F534A822A31C01799C3ED78640486E827E3A1E6106877116D5368247DF5166EBB468F6387D037D18067DCE6401C7CFA40B951B80884F97E6F98311398FA12473B7097D] + Fp![0x00000558828C2288CE41857C549CF0F621F1E44CE0C6343BCF30EC04F9495BD72272504C410C320602DFBF8ACAC3C767F490B4D454F86D413E018D169F9E0042F1A9C108EA61328D351242F31B72693531F8E12DC9FA961792CCA078B1EC8ADA]*i;
newPsiS := EA(Fp2)![newPsiSx, newPsiSy, newPsiSz];

comp := 0x04485C53CA0EA7F2D087B03FEDB3EADEF9C7026CC410F1AFB3BB20333833B1927D36A9D9D90DD39C9586863A7142499A;

bit := 1;

if bit eq 1 then
  magPsiS := comp*R1 + R2;
else
  magPsiS := R1 + comp*R2;
end if;

print R1 in EA;
print R2 in EA;
print magPsiS in EA;
print newPsiS in EA;

print newPsiS eq magPsiS;

psiSTriple := newPsiS;
for i in [1..eB-1] do
  psiSTriple := 3*psiSTriple;
  if psiSTriple eq EA!0 then
    print "Error in magma psi(S) order";
  end if;
end for;
