// Paramters defining the prime p = f*lA^eA*lB^eB - 1
f := 1;
lA := 2;
lB := 3;
eA := 372;
eB := 239;

Border := 1076415339332851335838408278837787304900791017342367285006484190592481075231153579549080863047304729836926607724267;

// Define the prime p
p := f*lA^eA*lB^eB-1;
assert IsPrime(p: Proof:=false);

// or, explicitly...
print p eq
1035471774176930525297776823786680532142738964554907117011618967905467894068247\
8846502882896561066713624553211618840202385203911976522554393044160468771151816\
976706840078913334358399730952774926980235086850991501872665651576831;

// Prime field of order p
Fp := GF(p);
// Finite field of characteristic Border
Fborder := GF(Border);
// The quadratic extension via x^2 + 1 since p = 3 mod 4
Fp2<i> := ExtensionField<Fp,x|x^2+1>;

// E0 is the starting curve E0/Fp2: y^2=x^3+x (the A=0 Montgomery curve)
E0 := EllipticCurve([Fp2|1,0]);

A :=
Fp![0x0000307264B7D2111D65B666C390DC7F9F6ECF366080287DB0E72025092A42AAF16C8F17F7BE358410794E1722888FF07EC9DDB9FE6FF0B9E12B4D2F65B509E59FD165DD6B5CDA76B1BCFE0EDBD3F9027297B440A5AA7BE20FB2BD751963C470] + Fp![0x000001A37D83E98E3EE2E90695F4CFAB276F0C3B59FD244A1F5C36E1205E8AA16740BD13647C78799F8A7A3882794EE2CC5FEE85EA658BA5BBB5EBFC4C66CF05E565DCEE4AB73E86C30950026DCD9486ADEAD08BCCC6C12A6CF96F0A1A48F037]*i;


_<x> := PolynomialRing(Fp2);

//Randalls public key curve EA
EA := EllipticCurve(x^3 + A*x^2 + x);

print IsSupersingular(E0) and (p+1)*Random(EA) eq EA!0;

// Create points psi(S), R1, and R2
psiSx :=
Fp![0x00000BCB7EB212C6EC0F6B03D150EEBDEE0B4A28ABEDAADA8832C2364FB2945DB9931350E6C9001056A9CF1427972ED84FBBA18F321D650D0AE42E72F04CDBE55BA35B8B1944CB73E166B194257A68799503347B99989C2A6B01B82C83B6EAB0] + Fp![0x00002D7E7BDB9E95BE27F5081F8E37DC1707B2F0D087B65B1069F4C0BE34416D6A703E5DBED534CED7EDE65A1836655C790DB8BCBAE41E30E6A134E454C5C6DD4E18EAD8B51559506871C95EC553CB2054404ECB77D28E78F9D8583F2CE6EB6E]*i;
psiSy :=
Fp![0x000064016D7E1D1F01E90A45461BD98BDDABF10414FA124439C90A423CD6E6E858266EC406B43F7F9CD5ADDCDBC4CD00F5DB664CD164E995917065B2AB64F1D6277C84CFAF3AF5A5AA1A68A7161DF9B50CF136B0DB2D1F2BF779A9004CB3069E] + Fp![0x00000E60A48DFAAAE7A8480B75EF2048AC9B1FEF8BF9B8DD50F6CAA6899FAE0F24E2B44FC13B36F1E31978A9AFF34CAD7887E7855C2ACBDA1E65D08395A84429AC31D842AC84F0661E985C7D70A5AE8A3F95694B0582EAD5A5558ACE93A6EA56]*i;

psiS := EA(Fp2)![psiSx, psiSy];

//print psiS in EA;

R1x :=
Fp![0x0000269D61D3C9D1BA84A0196082FCBA879F21FE98BAF8679BBFD563FE8C33E8F492098B096C76ADC4D9E23722E376454127C3950A1EB3C67ABD61255580C05E6F7B6B08DF071876B7CC6BD3FE3F719FAAE804AA6E563598BBB71BD2B343E19F] + Fp![0x00003B8532616ACCCC733E98771CF080E7040A2FA3AD1E14DCA6F81A0BDAF5D4C495D0C167F938CDB6A7C653B3D7B2C6A2F133ECD59B86340171A99150B3CE1C13486B4DC35145341E4321374EE50E621750283BCD1716AB91AEFF3B296675A1]*i;
R1y :=
Fp![0x00000FB91BE4A770AEBEC800B74FCC961FC512A1422CD918DF295D402509E5E067E9447400D89C2E8E05864EADE7BEA1830EA6C04778AC75142A410058F5D2BE7A57342CA31B38F704609472774B83F3874EB0BD68813F93EE025EE3A91CB00D] + Fp![0x0000343D85B7EEBBBEE7FA4D3A68CA7FED75D9044D0B8150FD384216BC986572D9E97804713D8348A1A8938B7160362A29FF0458C86C2AF3B8F87A78D41E0490B17AD4310FC8A1C534E6F8DE6D45769FE171091B79425B90C34D54937E172F43]*i;

R1 := EA(Fp2)![R1x, R1y];

R2x :=
Fp![0x000009C576766B12573D4F0D43EC6719CA08763C34B0A007442084A2E08216180BDB3433EEE04079D510CEC53CD39EC09181DC250C1DDA47D9BF32240C668BC0AA7176EEE49BD656D3DF5CC3C216D3402A80EB73F1245A1CE5FD9E93138A9743] + Fp![0x000004B3666054F4E2B3EE7B08DA6BD659BC1FECB8799036A5F6F67CC3B1781ED68AD6C7D3BF0B240CBCDB7242AEA507C02E0CBA738F4543922A3B4E409627352E71BA46C327659810A70CE853BEA4D9867A6D3E59367D67C33BEEF476B83790]*i;
R2y :=
Fp![0x00004DB860A14B05FF2066475E8F39EE79EF0DF8210AD451A25A148D7B3FA7F1A642AC903EE4F8BE53AD7FAD6647BE60236D50F95EF39A486E7998B24A4010892DF70BD246ED4BD647C8C502334594763266F04A5531724DE33A81BF56112841] + Fp![0x000001F47C78934D22A58419A2182F5FB7B434BC69D28C7DDF58B820C9F0A8394C0D3B1467FDDED726F5E82C8A0E28D77AEF2CE9FBB300EFAA295807812CAA872CBBFF120D424F4DA787568E84D19E9AAEAD4847A697B8A397195DD74BD6CEEE]*i;

R2 := EA(Fp2)![R2x, R2y];

a :=
0x06FE5D541F71C0E12909F97BADC668562B5045CB25748084E9867D6EBE876DA959B1A13F7CC76E3EC968549F878A8EEA;

b :=
0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001;

//print R1 in EA;
//print R2 in EA;

newPsiS := a*R1 + b*R2;
print psiS in EA;
print R1 in EA;
print R2 in EA;
print newPsiS in EA;
print psiS eq newPsiS;
