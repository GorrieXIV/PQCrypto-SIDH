// Paramters defining the prime p = f*lA^eA*lB^eB - 1
f := 1;
lA := 2;
lB := 3;
eA := 372;
eB := 239;

Border := 1076415339332851335838408278837787304900791017342367285006484190592481075231153579549080863047304729836926607724267;

// Define the prime p
p := f*lA^eA*lB^eB-1;
assert IsPrime(p: Proof:=false);

// or, explicitly...
print p eq
1035471774176930525297776823786680532142738964554907117011618967905467894068247\
8846502882896561066713624553211618840202385203911976522554393044160468771151816\
976706840078913334358399730952774926980235086850991501872665651576831;

// Prime field of order p
Fp := GF(p);
// Finite field of characteristic Border
Fborder := GF(Border);
// The quadratic extension via x^2 + 1 since p = 3 mod 4
Fp2<i> := ExtensionField<Fp,x|x^2+1>;

// E0 is the starting curve E0/Fp2: y^2=x^3+x (the A=0 Montgomery curve)
E0 := EllipticCurve([Fp2|1,0]);

A :=
Fp![0x000036834F2DD9502E7745EC563BDB06B49D1DDC642D2F3994C556DE3D0A9E505CFCC1753D3BAFC61EA1B603AF4A52DA60BC77FB190654895A5ADCF1337AC2A60F7B595B1E3571403A7D9D1528E9E27CCAF65AE9161B9D40AAC20B436D5FEF23] + Fp![0x000015EC80C2E672A6A29F47E0D4000586F13C3661CBE04B3CBD7992302111AF2DA064B7DCF44BDDFC99DEBE46F02AF2523C66E3D16AB2BE8448EC813413632BA599B3CFF986E87AAA09A21FAB95205BE170ADC89A2B7EADAF96643BEA5F4DDD]*i;


_<x> := PolynomialRing(Fp2);

//Randalls public key curve EA
EA := EllipticCurve(x^3 + A*x^2 + x);

print IsSupersingular(E0) and (p+1)*Random(EA) eq EA!0;

// Create points psi(S), R1, and R2
psiSx :=
Fp![0x00004C9E8B13A73E9BC47E3B20C9DBC53FA39687E713D2466BEC142A523E7CBD09097540E9214D0E85815C1DBABE1950704E6EC3270D15DF2083BCD46BBA20228DEDC392A80AD6B10260884336B9FB0F10B5FD490B53EF71984EA212ED2B11B7] + Fp![0x0000372BF3EB5BF20244EBAF46814EC0C8171465BC4A18B027D503B22911192978D61F766D41EC69BBFACDACC1101EB77D14B648161AAEFB5E1789077EF00D1C79AB2E6D0F03FF5F803734896243B0250A423E1D9064BD0714E4E575E1846608]*i;
psiSy :=
Fp![0x00004D48A8A2F3444E3C14FD399407D45F1219701240B69F004AFE36C625E983C7639EE38ED44258EBE4287F0D64E5CCE709903AFD48FFAB979A2C3622E41B80D7A22D642E4F14E7074A9A73621D8059A2B260E7194ECF9D5D0A35D80A81FD02] + Fp![0x000039AC10BD2775AEBBE403AAB4A171BF6834E9422BCF4D42A2C9E625AD6196A0C39834B74859626A8C67D02843120645121DC6592A1354D34474C098E0B166CF5096D62C4CA78498588904EC41F46519AAC955120180F5C01D09A3CE4305A0]*i;

psiS := EA(Fp2)![psiSx, psiSy];

//print psiS in EA;

R1x :=
Fp![0x00002D8FA80A660A945EBBD21A5D837A34FCA4693539385486C6F4DAA6A20A0B02C42B715B9C317E5E9850AE9337166FE8126B09E94BCA30BD36AE0750D8F306EE62C75F73D4F037F4728D858BEC41539D227296D07A0C3035E698C13889452F] + Fp![0x00004587F337F7E7B52220A866A64C9FD950A6E1F6EF34AA05BB5561E72705C1C9D885D2E9358A539D13FA3FAF99333984D1E24FF2034F1C1A58723C4D706D5F4AA9A1A1650B518CA6B5FDB4181E581F2A13AF707B7CB9E3071EDAA802DB75E8]*i;
R1y :=
Fp![0x00006644E9CB26E2D0FC39143A7F2F4E759C5B196404DC7A08C3B9E8DCE4540BA7E79B8FCA870E695B5E8D02DF3D62C3F7A6D75D7FBD52D9616DC1CCCDA4447F3CEFDD476DD4173C2650EAEAF259F18AC8924F58615B6E59D2A67AAC89529878] + Fp![0x00002BB39190CF10BAD3D5B7184F99B8514377A52769ABC6A82036F13E3912B106EF9DCFDE09B5B2FD3585237F8A818AD36D5C6576007F07FB4E39D3C19B5A7A1F574ADFE5A5CCCC499E5CFEE5D9A54250B3A05C54F7ED55ED36379A2E6FA8A3]*i;

R1 := EA(Fp2)![R1x, R1y];

R2x :=
Fp![0x000033589568843F9493F4EA6F7F6BFAC9320A20127978A2EFB572F0C5C4334FD44190C525AC32074D808A0F228453B0335B8214F622AE6608F6DE906901BF3BA513ADD6D21B9BAAE564A12B158D6A9BE885E948E585BC501436C6BF4E1A2B94] + Fp![0x00003CD122FCF24A5CA47BBD40E42E036EE4A0FE166CE47A09A916451547A7D45C038A3462C2A78805F6A03BED6166149EFA0CBCF441E92907A9A44D81196F2D6BE07B272DFCA623E2DC92EAE4E26126CD4CED433E738156A69404856A58EFEF]*i;
R2y :=
Fp![0x00005D0E66F138A9F95DDB0F05FF020AECEE7CD23E8B6EB3840C6529BA0019FC7A54573633743288AD34D09CE107A1DC4A1C557DBE41D7B01F09E814E35F9B942C583151F9359186F2A05A64AB29C14EBF49C26F77826DA161773F5056D31B6F] + Fp![0x00002CC99FBE3DC504C32375E838821FA0EBF5A50EB1AEB6F5724BBC4F2791946C9C3C66A4584AAF5AC627F0262C17827F215C52A81DFFABE28D9BBC286019247871C947432D56500EEC02B8AF1738D87DD754504A8CD188CABFF2A8374E9DB7]*i;

R2 := EA(Fp2)![R2x, R2y];

a :=
0x06795516F5F65C0E5BF915ABD20B3A1F731629E631165B0042511DCC7D10B636B7540DDBAB9BF2FEF1BBAD36A0837434;

b :=
0x0533DBF9ADC4D36370E7FDBD20041C436FA1626D08CB43B1AA4D0323FDE14B14EA5597AD32B202F50AE144C77C4F369A;

//print R1 in EA;
//print R2 in EA;

newPsiS := a*R1 + b*R2;

print psiS eq newPsiS;
