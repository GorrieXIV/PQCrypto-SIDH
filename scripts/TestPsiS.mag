// Paramters defining the prime p = f*lA^eA*lB^eB - 1
f := 1;
lA := 2;
lB := 3;
eA := 372;
eB := 239;

Border := 1076415339332851335838408278837787304900791017342367285006484190592481075231153579549080863047304729836926607724267;

// Define the prime p
p := f*lA^eA*lB^eB-1;
assert IsPrime(p: Proof:=false);

// or, explicitly...
print p eq
1035471774176930525297776823786680532142738964554907117011618967905467894068247\
8846502882896561066713624553211618840202385203911976522554393044160468771151816\
976706840078913334358399730952774926980235086850991501872665651576831;

// Prime field of order p
Fp := GF(p);
Fborder := GF(Border);
// The quadratic extension via x^2 + 1 since p = 3 mod 4
Fp2<i> := ExtensionField<Fp,x|x^2+1>;

// E0 is the starting curve E0/Fp2: y^2=x^3+x (the A=0 Montgomery curve)
// EA is Randall's public key curve E0/<R>
E0 := EllipticCurve([Fp2|1,0]);

A := Fp![0x000036834F2DD9502E7745EC563BDB06B49D1DDC642D2F3994C556DE3D0A9E505CFCC1753D3BAFC61EA1B603AF4A52DA60BC77FB190654895A5ADCF1337AC2A60F7B595B1E3571403A7D9D1528E9E27CCAF65AE9161B9D40AAC20B436D5FEF23] + Fp![0x000015EC80C2E672A6A29F47E0D4000586F13C3661CBE04B3CBD7992302111AF2DA064B7DCF44BDDFC99DEBE46F02AF2523C66E3D16AB2BE8448EC813413632BA599B3CFF986E87AAA09A21FAB95205BE170ADC89A2B7EADAF96643BEA5F4DDD]*i;

_<x> := PolynomialRing(Fp2);
EA := EllipticCurve(x^3 + A*x^2 + x);

//EA := EllipticCurve([Fp2|1, A]);
//print IsSupersingular(E0) and IsSupersingular(EA);
print (p+1)*Random(EA) eq EA!0;

// Create points psi(S), R1, and R2
//psiSx1 := Fp![2760601338741737491649683507063372887225002290129848710530479635393918444231403421460626961932731872534090467805424526190543947569965599588522224619153189036356620845312136627602092441351685004177847161022670008280950830478931];
//psiSx2 := Fp![7006773306706639236350932166227343007502916420411800598683212475446076185174524067227907396635687172150843051609039089975724472395988595987862775398718955552997322109558933187256626808636566200409152874236287953496169569268800];
psiSx := Fp![0x00004C9E8B13A73E9BC47E3B20C9DBC53FA39687E713D2466BEC142A523E7CBD09097540E9214D0E85815C1DBABE1950704E6EC3270D15DF2083BCD46BBA20228DEDC392A80AD6B10260884336B9FB0F10B5FD490B53EF71984EA212ED2B11B7] + Fp![0x0000372BF3EB5BF20244EBAF46814EC0C8171465BC4A18B027D503B22911192978D61F766D41EC69BBFACDACC1101EB77D14B648161AAEFB5E1789077EF00D1C79AB2E6D0F03FF5F803734896243B0250A423E1D9064BD0714E4E575E1846608]*i;
//psiSy1 := Fp![16595082540815542982169931632304367345198903870451695385981051680202692928015653835225112721807738440847795663967773701165506473647105206841587538829701483688023489747608053773588634625253185826726529388890584761642818612965416];
//psiSy2 := Fp![5443962180840672685254413400440362084330969833050517935042784099193874937990317227751024477243596331224439534735964770762111264518799234746627133088962165769775008948521269446507628347726961438071286170465653685464958815025618];
psiSy := Fp![0x00004D48A8A2F3444E3C14FD399407D45F1219701240B69F004AFE36C625E983C7639EE38ED44258EBE4287F0D64E5CCE709903AFD48FFAB979A2C3622E41B80D7A22D642E4F14E7074A9A73621D8059A2B260E7194ECF9D5D0A35D80A81FD02] + Fp![0x000039AC10BD2775AEBBE403AAB4A171BF6834E9422BCF4D42A2C9E625AD6196A0C39834B74859626A8C67D02843120645121DC6592A1354D34474C098E0B166CF5096D62C4CA78498588904EC41F46519AAC955120180F5C01D09A3CE4305A0]*i;
psiS := EA(Fp2)![psiSx, psiSy];

print psiS in EA;

//psiS := EA![20822980237232112531912212748 + 51278778511252216111315483*i,125228132159772071454873118180 + 877013910730177471301131354840*i];
// R1 := EA![2052111761442405241083921322120 + 151421532372212653931171585610*i,187118178183224219139992423888143 + 713614811726411377219247134156*i];
// R2 := EA![12425524171173160202138121218140173 + 5921011320555831351482220320666*i,10924159824912315518921456163211 + 21423833239105219063319119175*i];
// a := Fborder!156971921972241659215198628498
// b := Fborder!161788118612315171211492770105

// newPsiS := a*R1 + b*R2;

// print psiS eq newPsiS;
